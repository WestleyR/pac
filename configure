#!/bin/sh
# Created by: WestleyR
# email: westleyr@nym.hush.com
# Date: Feb 13, 2019
# https://github.com/WestleyR/pac
# Version-1.0.1
#
# The Clear BSD License
#
# Copyright (c) 2019 WestleyR
# All rights reserved.
#
# This software is licensed under a Clear BSD License.
#

set -e

MAKEFILE="Makefile"

MAKEFRAG="makefile-parts"

ALL_MAKE="${MAKEFRAG}/all.makefile"
TARGET_MAKE="${MAKEFRAG}/target.makefile"
STATIC_MAKE="${MAKEFRAG}/static.makefile"
INSTALL_MAKE="${MAKEFRAG}/install.makefile"
CLEAN_MAKE="${MAKEFRAG}/clean.makefile"
UNINSTALL_MAKE="${MAKEFRAG}/uninstall.makefile"

SRCDIR="src"

FILES_NEEDED="${SRCDIR}/main-pac.c ${ALL_MAKE} \
${STATIC_MAKE} ${INSTALL_MAKE} ${CLEAN_MAKE} \
${UNINSTALL_MAKE}"

PREFIX="/usr/local/bin"
COMPILER="gcc"

CFLAGS=""

NON_ROOT_PREFIX="${HOME}/.local/bin"
AUTO_PREFIX="false"

help_menu() {
    echo "USAGE:
  $0 [option]

OPTIONS:
  --prefix=string    : set install prefix.
  --compiler=string  : set the compiler, eg. gcc, tcc...
  -a, --auto-prefix  : automaticly chose between: ${PREFIX} (when installed as root)
                       or: ${NON_ROOT_PREFIX} (when installed by user). this option
                       is used for package manager (clib).
  -v, --compile-v    : compile with verbose on.
"

    exit 0
}

for arg in "$@"; do
    if [ "$arg" = "-h" ] || [ "$arg" = "--help" ]; then
        help_menu
    elif [ $(echo "$arg" | strcomp -s="--prefix=") -eq 0 ]; then
        PREFIX=`echo "$arg" | strcomp -S=9`
    elif [ $(echo "$arg" | strcomp -s="--compiler=") -eq 0 ]; then
        COMPILER=`echo "$arg" | strcomp -S=11`
    elif [ "$arg" = "-a" ] || [ "$arg" = "--auto-prefix" ]; then
        AUTO_PREFIX="true"
    elif [ "$arg" = "-v" ] || [ "$arg" = "--compile-v" ]; then
        CFLAGS="-v"
    fi
done

echo -n "  Checking for: strcomp... "
if ! [ -x "$(command -v strcomp)" ]; then
    echo "no"
    echo "ERROR: Need 'strcomp'"
    echo
    echo "Please download/install strcomp from:"
    echo "https://github.com/WestleyR/strcomp"
    exit 1
fi
echo "yes"

echo -n "  Checking for: make... "
if ! [ -x "$(command -v make)" ]; then
    echo "no"
    echo "ERROR: Need 'make'"
    echo
    echo "Please download/install it by:"
    echo ">> $ sudo apt-get install make  # or"
    echo ">> $ sudo apt-get install build-essential"
    exit 1
fi
echo "yes"

echo -n "  Checking for: ${COMPILER}... "
if ! [ -x "$(command -v ${COMPILER})" ]; then
    echo "no"
    COMPILER_B="tcc"
    echo -n "  Now looking for backup compiler: ${COMPILER_B}... "
    if ! [ -x "$(command -v ${COMPILER_B})" ]; then
        echo "no"
        echo "ERROR: No compiler found."
        echo "ERROR: Need 'gcc', or 'tcc'"
        echo
        echo "Please download/install it by:"
        echo ">> $ sudo apt-get install build-essential"
        exit 1
    else
        echo "yes"
        echo
        echo "ERROR: The compiler (${COMPILER}), is not found..."
        echo "But, you do have ${COMPILER_B}. Try:"
        echo
        echo "./configure --compiler=tcc"
        echo
        exit 1
    fi
fi
echo "yes"

echo "  Setting prefix : ${PREFIX}"
echo "  Setting compiler : ${COMPILER}"

echo "  Checking for existing files..."

for file in $FILES_NEEDED; do
    echo -n "  Checking for file : ${file}... "
    if [ ! -e "$file" ]; then
        echo "no"
        echo "ERROR: File missing : ${file}"
        echo
        echo "Try redownloading print-line from https://github.com/WestleyR/pac"
        echo
        exit 100
    else
        echo "yes"
    fi
done

if [ "$AUTO_PREFIX" = "true" ]; then
    if [ $(id -u) != 0 ]; then
        PREFIX="$NON_ROOT_PREFIX"
        if [ -e "$PREFIX" ]; then
            mkdir -p "$PREFIX"
        fi
        if [ -z $(echo "$PATH" | grep '.local/bin') ]; then
            echo "WARGING!!!!!"
            echo "PLEASE ADD: ${PREFIX} TO YOUR PATH!!!"
            echo "WARGING!!!!!"
        fi
    fi
fi

echo "  Building makefile..."

cat << EOF > "$MAKEFILE"
# Created by: WestleyR
# email: westleyr@nym.hush.com
# Date: Feb 8, 2018
# https://github.com/WestleyR/pac
# Version-1.0.0
#
# The Clear BSD License
#
# Copyright (c) 2019 WestleyR
# All rights reserved.
#
# This software is licensed under a Clear BSD License.
#
# This Makefile was generated by: configure, and was:
#  generated in      : $(pwd)
#  generated by      : $(whoami)
#  generated on      : $(date "+%B %d, %Y, %I:%M:%S %p")
#  generated on arch : $(uname -m)
#
#
# DO NOT EDIT!
#

EOF


if [ "$COMPILER" = "gcc" ]; then
    cat << EOF >> "$MAKEFILE"

TARGET = pac
SRDDIR = src
DEPDIR = deps

PREFIX = ${PREFIX}

CC = ${COMPILER}

STATIC_BUILD_FLAG = -static
GCC_FLAGS = -std=c99
FLAG = ${CFLAGS}

SRC = \$(wildcard \$(SRDDIR)/*.c)

EOF
else
    cat << EOF >> "$MAKEFILE"

TARGET = pac
SRDDIR = src
DEPDIR = deps

PREFIX = ${PREFIX}

CC = ${COMPILER}

FLAG = ${CFLAGS}

SRC = \$(wildcard \$(SRDDIR)/*.c)

EOF
fi

cat "$ALL_MAKE" >> "$MAKEFILE"
cat "$TARGET_MAKE" >> "$MAKEFILE"

if [ "$COMPILER" != "tcc" ]; then
    cat "$STATIC_MAKE" >> "$MAKEFILE"
fi

cat "$INSTALL_MAKE" >> "$MAKEFILE"
cat "$CLEAN_MAKE" >> "$MAKEFILE"
cat "$UNINSTALL_MAKE" >> "$MAKEFILE"

echo "DONE."
echo
echo "Makefile ready; do:"
echo
echo "  $ make [make_option]"
echo "  $ sudo make install"
echo

#
# End configure
#
